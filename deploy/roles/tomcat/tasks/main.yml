--- 
# Create tomcat instance. Variables to pass in to this role (these can also be global defaults)
# tomcat_parent - Parent directory for installation (example: /home/fr)
# tomcat_instance - Intance name (e.g. tomcat-openam). 
# tomcat_user - user id to run as 
# tomcat_http_port
# tomcat_https_port

# Download tomcat 
#- name: download tomcat 

- include: ../../download.yml download_file={{tomcat_archive}} download_url={{tomcat_download_url}}

- file: path={{tomcat_parent}} state=directory owner={{user}} group={{owner}}

- name: Extract tomcat archive
  command: tar -xvf {{download_dir }}/{{tomcat_archive}} -C {{ tomcat_parent }}

- name: Disable {{ tomcat_instance }} service
  service: name={{ tomcat_instance }} state=stopped enabled=no
  ignore_errors: True

- name: remove any old tomcat instance 
  file: path={{tomcat_instance_dir}} state=absent

- name: mv tomcat instance into place
  command: mv -f {{tomcat_parent}}/apache-tomcat-{{ tomcat_version }} {{ tomcat_instance_dir}}

- name: change folder permissions
  file : path={{ tomcat_instance_dir}} group="{{owner}}" owner="{{user}}" recurse=yes state=directory

- name: check instance path is present  
  file: path={{tomcat_instance_dir}} state=directory

- name: Configure Tomcat server
  template: src=context.xml dest={{ tomcat_parent }}/{{ tomcat_instance }}/conf/ group={{owner}} owner={{user}}

- name: Configure Tomcat server
  template: src=server.xml dest={{ tomcat_parent }}/{{ tomcat_instance }}/conf/ group={{owner}} owner={{user}}

- name: Configure Tomcat users
  template: src=tomcat-users.xml dest={{ tomcat_instance_dir }}/conf/ group="{{group}}" owner="{{user}}"

- name: Install backbase properties file
  template: src=backbase.properties dest={{ tomcat_instance_dir }}/conf/ group="{{group}}" owner="{{user}}"

- name: Make sure folders are present
  file : path="{{item}}" group="{{owner}}" owner="{{user}}" state=directory
  with_items:
    - "{{tomcat_instance_dir}}/content"
    - "{{tomcat_instance_dir}}/configuration"
    - "{{tomcat_instance_dir}}/resources"
    - "{{tomcat_instance_dir}}/orchestrator"

- name : Load publish services
  copy: src=to-self-publishchains.xml dest="{{ tomcat_instance_dir }}/orchestrator" group="{{group}}" owner="{{user}}"


#- name: cp setenv.sh to set jvm params
#  copy: src=setenv.sh dest="{{ tomcat_instance_dir }}/bin"

- name: Install Tomcat init script
  template: src=tomcat.service  dest=/etc/init/{{tomcat_instance}}.conf mode=u+rw

- name: reload services
  command: sudo initctl reload-configuration

- name : Load contentservices server
  copy: src=contentservices.war dest="{{ tomcat_instance_dir }}/webapps" group="{{group}}" owner="{{user}}"

- name : Load orchestrator server
  copy: src=orchestrator.war dest="{{ tomcat_instance_dir }}/webapps" group="{{group}}" owner="{{user}}"

- name : Load portal server
  copy: src=portalserver.war dest="{{ tomcat_instance_dir }}/webapps" group="{{group}}" owner="{{user}}"

- name : Load mysql connector
  copy: src=mysql-connector-java-5.1.35-bin.jar dest="{{ tomcat_instance_dir }}/lib" group="{{group}}" owner="{{user}}"

- name: Start Tomcat
  service: name={{ tomcat_instance }} state=restarted enabled=yes

- name: wait for tomcat to start
  wait_for: port={{ tomcat_http_port }} delay=10

- name: Put file ready for import
  copy src=Portal-retail-banking-09d38aad-b072-4690-b66b-13389ea8a8d3.zip dest={{tomcat_instance_dir}}/import