---    
  - name: Install MySQL
    apt: 
      name: "{{ item }}"
    with_items:
        - python-mysqldb
        - mysql-server

  - name : Install config file
    template : src="my.cnf" dest="/etc/mysql"

  - name : Own some folders
    file: path={{item}} group="{{owner}}" owner="{{user}}" recurse=yes state=directory
    with_items:
      - /var/lib/mysql
      - /var/run/mysqld

  - name: Start the MySQL service
    service: 
      name: mysql 
      state: started
      enabled: true


  - name: update mysql root password for all root accounts
    mysql_user: name=root host={{ item }} password={{ mysql_root_password }} priv=*.*:ALL,GRANT
    with_items:
     - "{{ ansible_hostname }}"
     - bbdb{{base_domain}}
     - 127.0.0.1
     - ::1
     - bbweb{{base_domain}}
     - localhost

  - name : Install config file
    template : src=".my.cnf" dest="/root/.my.cnf" owner=root mode=0600


  - name: Create backbase backbase user
    mysql_user: name=backbase password={{ mysql_root_password }} priv=*.*:ALL,GRANT host={{ item }} state=present login_user=root login_password={{ mysql_root_password }}
    with_items:
     - "{{ ansible_hostname }}"
     - bbdb{{base_domain}}
     - 127.0.0.1
     - ::1
     - localhost
     - bbweb{{base_domain}}

  - name: Create Database
    mysql_db: login_user=backbase login_password={{ mysql_root_password }} name={{item}} state=present
    with_items:
      - "portal"
      - "audit"
      - "config"
      - "content"
      - "resource"
      - "orchestr"
      - "tracking"
      - "integration"

  - name: Create backbase backbase user
    mysql_user: name=backbase password={{ mysql_root_password }} priv={{item}}.*:ALL state=present login_user=root login_password={{ mysql_root_password }}
    with_items:
      - "portal"
      - "audit"
      - "config"
      - "content"
      - "resource"
      - "orchestr"
      - "tracking"
      - "integration"

  - name: Copy files
    copy: src={{item}} dest=/tmp/{{item}}
    with_items:
      - 'portal_schema.ddl'
      - 'audit_schema.ddl'
      - 'content_schema.sql'
      - 'orchestrator_schema.sql'
      - 'archiving_schema.sql'
      - 'tracking_schema.ddl'
      - 'portal_drop_schema.sql'
      - 'audit_drop_schema.sql'
      - 'content_drop_schema.sql'
      - 'orchestrator_drop_schema.sql'
      - 'archiving_drop_schema.sql'
      - 'tracking_drop_schema.sql'
      - 'default-foundation-data-blank.sql'


  - name: Drop schemas
    mysql_db: state=import login_host={{ec2_private_ip_address}} name={{item.key}} target=/tmp/{{item.value.down}} login_user=backbase login_password={{mysql_root_password}}
    with_dict: dbscripts

  - name: Load schemas
    mysql_db: state=import login_host={{ec2_private_ip_address}} name={{item.key}} target=/tmp/{{item.value.up}} login_user=backbase login_password={{mysql_root_password}}
    with_dict: dbscripts

  - mysql_db: state=import login_host={{ec2_private_ip_address}} name=portal target=/tmp/default-foundation-data-blank.sql login_user=backbase login_password={{mysql_root_password}}

 # - name: populuate databases
 #   mysql_db: state=import name=all target=/tmp/{{ inventory_hostname }}.sql


#  - name: copy .my.cnf file with root password credentials
#    template: src=.my.cnf dest=/home/root/.my.cnf owner=root mode=0600


